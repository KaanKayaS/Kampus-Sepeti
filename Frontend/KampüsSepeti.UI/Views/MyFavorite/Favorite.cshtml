@model List<PostDto>
@{
    ViewData["Title"] = "Favorilerim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="favorites-header">
        <h2>Favorilerim</h2>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="favorites-grid">
            @foreach (var post in Model)
            {
                <div class="favorite-card" data-id="@post.Id">
                    <div class="favorite-image">
                        <img src="@post.Image" alt="@post.Title" onerror="this.src='/uploads/default.jpg'">
                    </div>
                    <div class="favorite-details">
                        <h3>@post.Title</h3>
                        <p class="price">@post.Price.ToString("C")</p>
                        <p class="description">@post.Description</p>
                        <div class="favorite-footer">
                            <span class="date">@post.CreatedDate.ToString("dd/MM/yyyy")</span>
                            <div class="action-buttons">
                                <a href="/Main/PostDetail/@post.Id" class="view-details-btn">
                                    <i class="bi bi-eye"></i>
                                    İlanı Görüntüle
                                </a>
                                <button class="remove-favorite-btn" data-id="@post.Id">
                                    <i class="bi bi-heart-fill"></i>
                                    Favorilerden Çıkar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (ViewBag.TotalPages > 1)
        {
            <div class="pagination">
                @if (ViewBag.HasPreviousPage)
                {
                    <a href="/MyFavorite/Favorite?page=@(ViewBag.CurrentPage - 1)" class="page-link">
                        <i class="bi bi-chevron-left"></i>
                    </a>
                }

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <a href="/MyFavorite/Favorite?page=@i" 
                       class="page-link @(i == ViewBag.CurrentPage ? "active" : "")">
                        @i
                    </a>
                }

                @if (ViewBag.HasNextPage)
                {
                    <a href="/MyFavorite/Favorite?page=@(ViewBag.CurrentPage + 1)" class="page-link">
                        <i class="bi bi-chevron-right"></i>
                    </a>
                }
            </div>
        }
    }
    else
    {
        <div class="no-favorites">
            <i class="bi bi-heart"></i>
            <p>Henüz favorilere eklediğiniz ilan bulunmamaktadır.</p>
            <a href="/Main/Index" class="browse-link">İlanları Keşfet</a>
        </div>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const removeButtons = document.querySelectorAll('.remove-favorite-btn');
        
        removeButtons.forEach(button => {
            button.addEventListener('click', async function(e) {
                e.preventDefault();
                const postId = this.getAttribute('data-id');
                
                // Silme işlemi için onay al
                const result = await Swal.fire({
                    title: 'Emin misiniz?',
                    text: "Bu ilanı favorilerinizden kaldırmak istediğinize emin misiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, kaldır',
                    cancelButtonText: 'İptal'
                });

                if (result.isConfirmed) {
                    await removeFavorite(postId, this);
                }
            });
        });
    });

    async function removeFavorite(postId, buttonElement) {
        try {
            const userId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';
            
            const response = await fetch('http://localhost:5000/api/Posts/Removefavorite', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    userId: userId,
                    postId: postId
                })
            });

            if (response.ok) {
                // Başarılı silme durumunda
                Swal.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: 'İlan favorilerinizden kaldırıldı!',
                    showConfirmButton: false,
                    timer: 1500
                });

                // Kartı sayfadan kaldır
                const card = buttonElement.closest('.favorite-card');
                card.style.opacity = '0';
                setTimeout(() => {
                    card.remove();
                    
                    // Eğer son favori de kaldırıldıysa sayfayı yenile
                    const remainingCards = document.querySelectorAll('.favorite-card');
                    if (remainingCards.length === 0) {
                        location.reload();
                    }
                }, 500);
            } else {
                // Hata durumunda
                const errorData = await response.json();
                Swal.fire({
                    icon: 'error',
                    title: 'Hata!',
                    text: errorData.message || 'Bir hata oluştu!'
                });
            }
        } catch (error) {
            console.error('Hata:', error);
            Swal.fire({
                icon: 'error',
                title: 'Hata!',
                text: 'Bir hata oluştu, lütfen tekrar deneyin.'
            });
        }
    }
</script>

<style>
.favorites-header {
    text-align: center;
    margin: 20px 0;
}

.favorites-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
    padding: 20px;
}

.favorite-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    background: white;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    transition: transform 0.2s, opacity 0.5s ease;
}

.favorite-card:hover {
    transform: translateY(-5px);
}

.favorite-image {
    height: 200px;
    overflow: hidden;
}

.favorite-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.favorite-details {
    padding: 15px;
}

.favorite-details h3 {
    margin: 0;
    font-size: 1.2em;
    color: #333;
}

.price {
    font-size: 1.3em;
    color: #e44d26;
    font-weight: bold;
    margin: 10px 0;
}

.description {
    color: #666;
    margin-bottom: 15px;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.favorite-footer {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 10px;
}

.date {
    color: #888;
    font-size: 0.9em;
}

.action-buttons {
    display: flex;
    gap: 10px;
}

.view-details-btn, .remove-favorite-btn {
    padding: 8px 12px;
    border-radius: 4px;
    display: flex;
    align-items: center;
    gap: 5px;
    font-size: 0.9em;
    cursor: pointer;
    transition: all 0.2s;
}

.view-details-btn {
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border: none;
}

.view-details-btn:hover {
    background-color: #0056b3;
}

.remove-favorite-btn {
    background-color: #fff;
    color: #dc3545;
    border: 1px solid #dc3545;
}

.remove-favorite-btn:hover {
    background-color: #dc3545;
    color: white;
}

.no-favorites {
    text-align: center;
    padding: 50px 20px;
}

.no-favorites i {
    font-size: 3em;
    color: #ddd;
    margin-bottom: 20px;
}

.browse-link {
    display: inline-block;
    margin-top: 20px;
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.2s;
}

.browse-link:hover {
    background-color: #0056b3;
}

.pagination {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin: 20px 0;
}

.page-link {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    color: #007bff;
    text-decoration: none;
    transition: all 0.2s;
}

.page-link:hover {
    background-color: #007bff;
    color: white;
}

.page-link.active {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
}
</style>

